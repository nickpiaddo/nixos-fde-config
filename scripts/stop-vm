#!/usr/bin/env -S uv run --script
# /// script
# requires-python = ">=3.13"
# dependencies = [
#     "pexpect",
#     "typer",
# ]
# ///

import pexpect
import typer

from rich import print
from typing_extensions import Annotated

app = typer.Typer(rich_markup_mode="markdown")

@app.command()
def main(monitor_port: Annotated[int,
                           typer.Argument(metavar="MON_PORT",
                                          help="Specify the telnet port of the Virtual Machine monitor",
                                          show_default=False)]):
    """
    Stop a virtual machine (VM) with a QEMU monitor listening on port MON_PORT.



    Examples



     $ stop-vm 45454
    """
    print(f"Stopping virtual machine...")
    print(f"> Connecting to QEMU monitor on port: {monitor_port}")

    child_proc = pexpect.spawn(f"telnet localhost {monitor_port}")

    match child_proc.expect(['(qemu)', 'Connection refused', pexpect.TIMEOUT], timeout=120):
        case 0:
            print(f"> Sending command: 'quit'")
            child_proc.sendline('quit')
            match child_proc.expect([pexpect.EOF, pexpect.TIMEOUT]):
                case 0:
                    print("[bold]Virtual machine offline.[/bold]")
                case 1:
                    print(f"[red]Error:[/red] Operation timed out after {child_proc.timeout} seconds.")
                case _:
                    print(f"[red]Error:[/red] Unexpected event.")
        case 1:
            print(f"[bold red]Error:[/bold red] Found no running virtual machine.")
        case 2:
            print(f"[red]Error:[/red] Operation timed out after {child_proc.timeout} seconds.")
        case _:
            print(f"[red]Error:[/red] Unexpected event.")


if __name__ == "__main__":
    app()
